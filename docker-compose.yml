networks:
  traefik_network:
    driver: bridge
    name: traefik_network
    external: false   
 
services:
  authelia:
    extends:
      file: compose/authelia/docker-compose.yml
      service: authelia
    ports:
      - ${AUTHELIA_PORT}:${AUTHELIA_PORT}
    volumes:
      - ${CONFIG_DIR}/authelia:/config
      - ${CONFIG_DIR}/authelia/lostack_secrets:/lostack_secrets:rw
      - ${LOGS_DIR}/authelia:/logs/authelia
    labels:
      # Add traefik routing
      - 'traefik.enable=true'
      - 'traefik.http.routers.authelia.rule=Host(`${AUTHELIA_PREFIX}.${DOMAINNAME}`) || Host(`auth.${DOMAINNAME}`)'
      - 'traefik.http.routers.authelia.entrypoints=https' 
      - 'traefik.http.routers.authelia.tls=true'
      - 'traefik.http.routers.authelia.tls.options=default'
      # Add forwardauth and proxy header to authelia middleware
      - 'traefik.http.middlewares.authelia.forwardauth.address=http://authelia:${AUTHELIA_PORT}/api/authz/forward-auth'
      - 'traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'
      # Configure homepage automatic discovery
      - "homepage.name=Authelia"
      - "homepage.group=Services" 
      - "homepage.icon=authelia"
      - "homepage.description=Authentication service"
      - "homepage.href=https://authelia.${DOMAINNAME}/"
 
  code-server:
    extends:
      file: compose/code-server/docker-compose.yml
      service: code-server
    ports: # ENABLE FOR SETUP AND EMERGENCY ACCESS
      - ${CODE_SERVER_PORT}:8443
    volumes:
      - ${APPDATA_DIR}/code-server:/config
      - ./:/workspace:rw
    labels:
      # - "traefik.enable=true"
      # - "traefik.http.routers.code-server.entrypoints=https"
      # - "traefik.http.routers.code-server.rule=Host(`code-server.${DOMAINNAME}`)"
      # - "traefik.http.services.code-server.loadbalancer.server.port=8443"
      - "homepage.name=Code Server"
      - "homepage.group=Development"
      - "homepage.icon=vscode"
      - "homepage.description=Local File Editor"
      - "homepage.href=https://code-server.${DOMAINNAME}/"
      - "lostack.enable=true"
      - "lostack.autostart=true"
      - "lostack.group=code-server"
      - "lostack.duration=2h"
      - "lostack.primary=true"
      - "lostack.port=8443"

  coredns:
    extends:
      file: compose/coredns/docker-compose.yml
      service: coredns
    ports:
      - ${CORE_DNS_PORT}:53/tcp
      - ${CORE_DNS_PORT}:53/udp
    volumes:
      - ${CONFIG_DIR}/coredns/config:/config/
      - ${CONFIG_DIR}/coredns/Corefile:/data/Corefile
    labels:
      - "homepage.name=CoreDNS"
      - "homepage.group=Background Services"
      - "homepage.icon=coredns"
      - "homepage.description=Local Name Service"
  
  homepage:
    extends:
      file: compose/homepage/docker-compose.yml
      service: homepage
    volumes:
      - ${CONFIG_DIR}/homepage:/app/config
      - ${LOGS_DIR}/homepage:/app/config/logs
      - ${CONFIG_DIR}/homepage/images:/app/public/images
      - ${DOCKER_SOCKET}:/var/run/docker.sock
    labels:
      - "homepage.name=Homepage"
      - "homepage.group=Services"
      - "homepage.icon=homepage"
      - "homepage.description=Environment Dashboard"
      - "homepage.href=https://${DOMAINNAME}/"
      - "lostack.autostart=true"
      - "lostack.group=homepage"
      - "lostack.duration=45m"
      - "lostack.primary=true"
      - "lostack.enable=true"
      - "lostack.port=3000"
      # Host on ${DOMAINNAME} rather than homepage.${DOMAINNAME}
      - "lostack.root=true" 

  ldap-user-manager:
    extends:
      file: compose/ldap-user-manager/docker-compose.yml
      service: ldap-user-manager
    ports: # Enable for first-time-setup of openldap
      - ${LDAP_USER_MANAGER_PORT}:80  
    labels:
      - "homepage.name=Ldap User Manager"
      - "homepage.group=Admin"
      - "homepage.icon=/images/account.png"
      - "homepage.description=Users and Groups"
      - "homepage.href=https://ldap-user-manager.${DOMAINNAME}/"
      - "lostack.enable=true"
      - "lostack.port=80"
      - "lostack.autostart=true"
      - "lostack.group=ldap-user-manager"
      - "lostack.duration=5m"
      - "lostack.primary=true"

  openldap:
    extends:
      file: compose/openldap/docker-compose.yml
      service: openldap
    volumes: 
      - ${CONFIG_DIR}/openldap/ldap/db:/var/lib/ldap:rw
      - ${CONFIG_DIR}/openldap/ldap/conf:/etc/ldap/slapd.d:rw
    labels:
      - "homepage.name=OpenLDAP"
      - "homepage.group=Databases"
      - "homepage.icon=openldap"
      - "homepage.description=Users and Groups Service"

  sablier:
    extends:
      file: compose/sablier/docker-compose.yml
      service: sablier
    volumes:
      - ${DOCKER_SOCKET}:/var/run/docker.sock
    labels:
      - "homepage.name=Sablier"
      - "homepage.group=Background Services"
      - "homepage.icon=mdi-autorenew"
      - "homepage.description=Auto-Start Containers"
      - "lostack.primary=false"
      # DO NOT ENABLE LOSTACK ON SABLIER. IT WILL BREAK AUTOSTART.
      - "lostack.enable=false"
      - "lostack.group=sablier"

  lostack:
    extends:
      file: compose/lostack/docker-compose.yml
      service: lostack
    build:
      context: lostack
      target: builder
    restart: unless-stopped
    environment:
      - ADMIN_GROUP=admins
      - DB_HOST=lostack-db
      - DB_NAME=lostack-db
      - DB_PASSWORD=${DATABASE_PASSWORD}
      - DB_PORT=3306
      - DB_USER=lostack
      - TRUSTED_PROXY_IPS=${TRUSTED_PROXYS}
      - USERNAME_HEADER=Remote-User
      - GROUPS_HEADER=Remote-Groups
      - ADMIN_GROUP=admins
      - DEBUG=false
      - DEPOT_DEV_MODE=true
    volumes:
      - ${DOCKER_SOCKET}:/var/run/docker.sock
      - ${CONFIG_DIR}/lostack/lostack-dynamic.yml:/dynamic.yml:rw
      - ${APPDATA_DIR}/lostack:/appdata
      - ./:/docker
      - ./lostack-compose.yml:/lostack-compose.yml
    labels:
      # LoStack handles group-based auth internally
      # It uses Authelia's forwarded headers to auth users
      - "traefik.enable=true"
      - "traefik.http.routers.lostack.rule=Host(`lostack.${DOMAINNAME}`)"
      - "traefik.http.services.lostack.loadbalancer.server.port=80"
      - "traefik.docker.network=traefik_network"
      # Create LoStack forwardauth middleware
      - "traefik.http.middlewares.lostack-auth.forwardauth.address=http://lostack:80/auth"
      - "traefik.http.middlewares.lostack-auth.forwardauth.authResponseHeaders=Remote-Name,Remote-Groups"
      - "traefik.http.middlewares.lostack-auth.forwardauth.trustForwardHeader=true"
      - "homepage.name=LoStack Admin"
      - "homepage.group=Admin"
      - "homepage.icon=mdi-rocket-launch"
      - "homepage.description=Docker Ecosystem Managment"
      - "homepage.href=https://lostack.${DOMAINNAME}/"  

  lostack-ldap-test:
    extends:
      file: compose/lostack/docker-compose.yml
      service: lostack-ldap-test
    build:
      context: lostack
      dockerfile: ldap-test.dockerfile
    restart: unless-stopped
    environment:
      - USERNAME_HEADER=Remote-User
      - GROUPS_HEADER=Remote-Groups
      - ADMIN_GROUP=admins
      - DB_HOST=lostack-db
      - DB_NAME=lostack-db
      - DB_PASSWORD=${DATABASE_PASSWORD}
      - DB_PORT=3306
      - DB_USER=lostack      
      - TRUSTED_PROXY_IPS=${TRUSTED_PROXYS}
      - DEBUG=false
      - ORGANISATION_NAME=${LDAP_ORGANISATION}
      - LDAP_URI=ldap://testldap:${OPENLDAP_PORT}
      - LDAP_BASE_DN="${LDAP_BASE_DN}"
      - LDAP_ADMINS_GROUP=admins
      - LDAP_ADMIN_BIND_DN="cn=${LDAP_ADMIN_USER},${LDAP_BASE_DN}"
      - LDAP_ADMIN_BIND_PWD=${LDAP_ADMIN_PASSWORD} 
      - LDAP_DEBUG=true
      - LDAP_IGNORE_CERT_ERRORS="true
      - LDAP_REQUIRE_STARTTLS="false
      - LDAP_DOMAIN=${DOMAINNAME}
      - ACCEPT_WEAK_PASSWORDS=${LDAP_ACCEPT_WEAK_PASSWORDS}
      - EMAIL_FROM_ADDRESS=${LDAP_ADMIN_USER}@${DOMAINNAME}
    networks:
      - traefik_network
    labels:
      - "homepage.name=LoStack LDAP Test"
      - "homepage.group=Background Services"
      - "homepage.icon=mdi-database"
      - "homepage.description=LDAP Setup Tool"
      - "traefik.enable=true"
      - "traefik.http.services.lostack-ldap-test.loadbalancer.server.port=8080"

  lostack-db:
    extends:
      file: compose/lostack/docker-compose.yml
      service: lostack-db
    restart: unless-stopped
    volumes:
      - ${APPDATA_DIR}/lostack-db/:/var/lib/mysql
    labels:
      - "homepage.name=LoStack MariaDB"
      - "homepage.group=Databases"
      - "homepage.icon=mariadb"
      - "homepage.description=Container Auto-Start"
    
  traefik:
    extends:
      file: compose/traefik/docker-compose.yml
      service: traefik
    ports:
      - ${TRAEFIK_PORT_HTTP}:80
      - ${TRAEFIK_PORT_HTTPS}:443
    volumes:
      - ${DOCKER_SOCKET}:/var/run/docker.sock:ro
      - ${CERTS_DIR}:/certs:ro
      - ${CONFIG_DIR}/traefik/dynamic.yml:/dynamic/dynamic.yml
#      - ${CONFIG_DIR}/traefik/certificates.yaml:/certificates.yaml
      - ${CONFIG_DIR}/lostack/lostack-dynamic.yml:/dynamic/lostack-dynamic.yml
      - ${LOGS_DIR}/traefik:/logs/
      - ./traefik-plugins:/plugins-local
    labels:
      - "traefik.enable=true"
      # TLS options
      - "traefik.tls.options.modern.minVersion=VersionTLS13"
      - "traefik.tls.options.intermediate.minVersion=VersionTLS12"
      - "traefik.tls.options.intermediate.cipherSuites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
      # Add auth middleware
      - "traefik.http.routers.api.middlewares=authelia@docker,redirect-to-https"
      # Define redirect-to-https middleware
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
      # Associate traefik with hostname
      - "traefik.http.routers.traefik.tls.domains[1].main=${DOMAINNAME}"
      - "traefik.http.routers.traefik.tls.domains[1].sans=*.${DOMAINNAME}"
      # Add traefik dashboard routing
      - "traefik.http.routers.api.rule=Host(`traefik.${DOMAINNAME}`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.options=default"
      # Configure homepage automatic discovery
      - "homepage.name=Traefik Dashboard"
      - "homepage.group=Admin"
      - "homepage.icon=traefik"
      - "homepage.description=Traefik proxy dashboard"
      - "homepage.href=https://traefik.${DOMAINNAME}/"
