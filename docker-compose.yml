networks:
  traefik_network:
    driver: bridge
    name: traefik_network
    external: false

services:
  arcane:
    extends:
      file: compose/arcane/docker-compose.yml
      service: arcane
    volumes:
        - ${APPDATA_DIR}/arcane:/app/data
        - ${DOCKER_SOCKET}:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.arcane.rule=Host(`arcane.${DOMAINNAME}`)"
      - "traefik.http.services.arcane.loadbalancer.server.port=3000"
      - "homepage.name=Arcane"
      - "homepage.group=Admin"
      - "homepage.icon=arcane"
      - "homepage.description=Docker Manager"
      - "homepage.href=https://arcane.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=arcane"

  audiobookshelf:
    extends:
      file: compose/audiobookshelf/docker-compose.yml
      service: audiobookshelf
    volumes:
      - ${MEDIA_DIR}/audiobooks:/audiobooks
      - ${APPDATA_DIR}/audiobookshelf/metadata:/metadata
      - ${APPDATA_DIR}/audiobookshelf:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.audiobookshelf.rule=Host(`audiobookshelf.${DOMAINNAME}`)"
      - "traefik.http.services.audiobookshelf.loadbalancer.server.port=80"
      - "homepage.name=Audiobookshelf"
      - "homepage.group=Media"
      - "homepage.icon=audiobookshelf"
      - "homepage.description=Audiobook Player"
      - "homepage.href=https://audiobookshelf.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=audiobookshelf"

  authelia:
    extends:
      file: compose/authelia/docker-compose.yml
      service: authelia
    ports:
      - ${AUTHELIA_PORT}:${AUTHELIA_PORT}
    volumes:
      - ${CONFIG_DIR}/authelia:/config
    labels:
      # Add traefik routing
      - 'traefik.enable=true'
      - 'traefik.http.routers.authelia.rule=Host(`${AUTHELIA_PREFIX}.${DOMAINNAME}`) || Host(`auth.${DOMAINNAME}`)'
      - 'traefik.http.routers.authelia.entrypoints=https' 
      - 'traefik.http.routers.authelia.tls=true'
      - 'traefik.http.routers.authelia.tls.options=default'
      # Add forwardauth and proxy header to authelia middleware
      - 'traefik.http.middlewares.authelia.forwardauth.address=http://authelia:${AUTHELIA_PORT}/api/authz/forward-auth'
      - 'traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'
      # Configure homepage automatic discovery
      - "homepage.name=Authelia"
      - "homepage.group=Services"
      - "homepage.icon=authelia"
      - "homepage.description=Authentication service"
      - "homepage.href=https://authelia.${DOMAINNAME}/"

  bytestash:
    extends:
      file: compose/audiobookshelf/docker-compose.yml
      service: audiobookshelf
    volumes:
      - ${APPDATA_DIR}/bytestash:/data/snippets
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bytestash.entrypoints=https"
      - "traefik.http.routers.bytestash.rule=Host(`bytestash.${DOMAINNAME}`)"
      - "traefik.http.services.bytestash.loadbalancer.server.port=5000"
      - "homepage.name=ByteStash"
      - "homepage.group=Development"
      - "homepage.icon=bytestash"
      - "homepage.description=Code Snippets"
      - "homepage.href=https://bytestash.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=bytestash"

  code-server:
    extends:
      file: compose/code-server/docker-compose.yml
      service: code-server
    ports: # ENABLE FOR SETUP AND EMERGENCY ACCESS
      - ${CODE_SERVER_PORT}:8443
    volumes:
      - ${APPDATA_DIR}/code-server:/config
      - ./:/workspace:rw
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.code-server.entrypoints=https"
      - "traefik.http.routers.code-server.rule=Host(`code-server.${DOMAINNAME}`)"
      - "traefik.http.services.code-server.loadbalancer.server.port=8443"
      - "homepage.name=Code Server"
      - "homepage.group=Development"
      - "homepage.icon=vscode"
      - "homepage.description=Local File Editor"
      - "homepage.href=https://code-server.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=code-server"

  coredns:
    extends:
      file: compose/coredns/docker-compose.yml
      service: coredns
    ports:
      - ${CORE_DNS_PORT}:53/tcp
      - ${CORE_DNS_PORT}:53/udp
    volumes:
      - ${CONFIG_DIR}/coredns/config:/config/
      - ${CONFIG_DIR}/coredns/Corefile:/data/Corefile
    labels:
      - "homepage.name=CoreDNS"
      - "homepage.group=Background Services"
      - "homepage.icon=coredns"
      - "homepage.description=Local Name Service with DNSSEC"

  cyberchef:
    extends:
      file: compose/cyberchef/docker-compose.yml
      service: cyberchef
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cyberchef.entrypoints=https"
      - "traefik.http.routers.cyberchef.rule=Host(`cyberchef.${DOMAINNAME}`)"
      - "traefik.http.services.cyberchef.loadbalancer.server.port=8000"
      - "homepage.name=CyberChef"
      - "homepage.group=Tools"
      - "homepage.icon=cyberchef"
      - "homepage.description=Cybersecurity Tools"
      - "homepage.href=https://cyberchef.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=cyberchef"

  dozzle:
    extends:
      file: compose/dozzle/docker-compose.yml
      service: dozzle
    volumes:
      - ${DOCKER_SOCKET}:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dozzle.rule=Host(`dozzle.${DOMAINNAME}`)"
      - "traefik.http.services.dozzle.loadbalancer.server.port=8080"
      - "homepage.name=Dozzle"
      - "homepage.group=Admin"
      - "homepage.icon=dozzle"
      - "homepage.description=Container Logs"
      - "homepage.href=https://dozzle.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=dozzle"

  excalidraw:
    extends:
      file: compose/excalidraw/docker-compose.yml
      service: excalidraw
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.excalidraw.rule=Host(`excalidraw.${DOMAINNAME}`)"
      - "traefik.http.services.excalidraw.loadbalancer.server.port=80"
      - "traefik.http.services.excalidraw.loadbalancer.server.scheme=http"
      - "homepage.name=Excalidraw"
      - "homepage.group=Apps"
      - "homepage.icon=excalidraw"
      - "homepage.description=Diagram Tool"
      - "homepage.href=https://excalidraw.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=excalidraw"

  filebrowser:
    extends:
      file: compose/filebrowser/docker-compose.yml
      service: filebrowser
    volumes:
      - ${APPDATA_DIR}/filebrowser/:/database/:rw
      - ./:/data:rw
    # command: > # Uncomment for proxy auth (SET UP USERS WITH ADMIN FIRST)
    #   --auth.method=proxy
    #   --auth.header=Remote-User
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.filebrowser.rule=Host(`filebrowser.${DOMAINNAME}`)"
      - "traefik.http.services.filebrowser.loadbalancer.server.port=80"
      - "homepage.name=Filebrowser"
      - "homepage.group=File Management"
      - "homepage.icon=filebrowser"
      - "homepage.description=File Management"
      - "homepage.href=https://filebrowser.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=filebrowser"
  
  filestash:
    extends:
      file: compose/filestash/docker-compose.yml
      service: filestash
    volumes:
      - ${APPDATA_DIR}/filestash:/app/data/state/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.filestash.rule=Host(`filestash.${DOMAINNAME}`)"
      - "traefik.http.services.filestash.loadbalancer.server.port=8334"
      - "homepage.name=FileStash"
      - "homepage.group=File Management"
      - "homepage.icon=filestash"
      - "homepage.description=File Transfers"
      - "homepage.href=https://filestash.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=filestash"

  filestash-onlyoffice:
    extends:
      file: compose/filestash/docker-compose.yml
      service: filestash-onlyoffice
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.filestash-onlyoffice.rule=Host(`filestash-onlyoffice.${DOMAINNAME}`)"
      - "homepage.name=FileStash OnlyOffice"
      - "homepage.group=Services"
      - "homepage.icon=onlyoffice"
      - "homepage.description=File Transfers"
      - "homepage.href=https://filestash-onlyoffice.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=filestash"

  freshrss:
    extends:
      file: compose/freshrss/docker-compose.yml
      service: freshrss
    volumes:
      - ${APPDATA_DIR}/freshrss/data:/var/www/FreshRSS/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.freshrss.rule=Host(`freshrss.${DOMAINNAME}`)"
      - "traefik.http.services.freshrss.loadbalancer.server.port=80"
      - "homepage.name=FreshRSS"
      - "homepage.group=Apps"
      - "homepage.icon=freshrss"
      - "homepage.description=RSS Feed Aggregator"
      - "homepage.href=https://freshrss.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=freshrss"

  freshrss-db:
    extends:
      file: compose/freshrss/docker-compose.yml
      service: freshrss-db
    volumes:
      - ${APPDATA_DIR}/freshrss/db:/var/lib/postgresql/data
    labels:
      - "homepage.name=FreshRSS Postgres DB"
      - "homepage.group=Databases"
      - "homepage.icon=postgresql"
      - "homepage.description=FreshRSS Database"
      - "sablier.enable=true"
      - "sablier.group=freshrss"

  gitea:
    extends:
      file: compose/gitea/docker-compose.yml
      service: gitea
    volumes:
      - ${APPDATA_DIR}/gitea:/data
    # ports:
    #   - "222:22"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitea.rule=Host(`gitea.${DOMAINNAME}`)"
      - "traefik.http.routers.gitea.tls=true"
      - "traefik.http.services.gitea.loadbalancer.server.port=3000"
      - "homepage.name=Gitea"
      - "homepage.group=Development"
      - "homepage.icon=gitea"
      - "homepage.description=Git Repository Management"
      - "homepage.href=https://gitea.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=gitea"
    depends_on:
      - gitea-db
      - openldap

  gitea-db:
    extends:
      file: compose/gitea/docker-compose.yml
      service: gitea-db
    volumes:
      - ${APPDATA_DIR}/gitea-db:/var/lib/mysql
    labels:
      - "homepage.name=Gitea MariaDB"
      - "homepage.group=Databases"
      - "homepage.icon=mariadb"
      - "homepage.description=Gitea DB"
      - "homepage.href=https://gitea.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=gitea"

  homepage:
    extends:
      file: compose/homepage/docker-compose.yml
      service: homepage
    volumes:
      - ${CONFIG_DIR}/homepage:/app/config
      - ${LOGS_DIR}/homepage:/app/config/logs
      - ${CONFIG_DIR}/homepage/images:/app/public/images
      - ${DOCKER_SOCKET}:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homepage.rule=Host(`${DOMAINNAME}`)"
      - "traefik.http.services.homepage.loadbalancer.server.port=3000"
      - "homepage.name=Homepage"
      - "homepage.group=Services"
      - "homepage.icon=homepage"
      - "homepage.description=Environment Dashboard"
      - "homepage.href=https://${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=homepage"

  hrconvert:
    extends:
      file: compose/hrconvert/docker-compose.yml
      service: hrconvert
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hrconvert.rule=Host(`hrconvert.${DOMAINNAME}`)"
      - "traefik.http.services.hrconvert.loadbalancer.server.port=80"
      - "homepage.name=HRConvert"
      - "homepage.group=File Conversion"
      - "homepage.icon=mdi-autorenew"
      - "homepage.description=File Coversion"
      - "homepage.href=https://hrconvert.${DOMAINNAME}/HRProprietary/HRConvert2/convertCore.php"
      - "sablier.enable=true"
      - "sablier.group=hrconvert"
      
  it-tools:
    extends:
      file: compose/it-tools/docker-compose.yml
      service: it-tools
    # ports: # Uncomment this if you want to use the container during setup
    #   - 8380:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.it-tools.entrypoints=https"
      - "traefik.http.routers.it-tools.rule=Host(`it-tools.${DOMAINNAME}`)"
      - "traefik.http.services.it-tools.loadbalancer.server.port=80"
      - "homepage.name=IT-Tools"
      - "homepage.group=Tools"
      - "homepage.icon=it-tools"
      - "homepage.description=Dev Tools"
      - "homepage.href=https://it-tools.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=it-tools"

  jupyter:
    extends:
      file: compose/jupyter/docker-compose.yml
      service: jupyter
    volumes:
      - ${APPDATA_DIR}/jupyter:/home/docker_worker/work
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jupyter.entrypoints=https"
      - "traefik.http.routers.jupyter.rule=Host(`jupyter.${DOMAINNAME}`)"
      - "traefik.http.services.jupyter.loadbalancer.server.port=8888"
      - "homepage.name=Jupyter"
      - "homepage.group=Development"
      - "homepage.icon=jupyter"
      - "homepage.description=Python Data Science"
      - "homepage.href=https://jupyter.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=jupyter"

  kavita:
    extends:
      file: compose/kavita/docker-compose.yml
      service: kavita
    volumes:
      - ${APPDATA_DIR}/kavita/config:/config:rw
      - ${MEDIA_DIR}/books:/data:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kavita.rule=Host(`kavita.${DOMAINNAME}`)"
      - "traefik.http.services.kavita.loadbalancer.server.port=5000"
      - "homepage.name=Kavita"
      - "homepage.group=Media"
      - "homepage.icon=kavita"
      - "homepage.description=EBook Reader"
      - "homepage.href=https://kavita.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=kavita"

  ldap-user-manager:
    extends:
      file: compose/ldap-user-manager/docker-compose.yml
      service: ldap-user-manager
    ports:
      - ${LDAP_USER_MANAGER_PORT}:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ldap-user-manager.rule=Host(`ldap-user-manager.${DOMAINNAME}`)"
      - "traefik.http.services.ldap-user-manager.loadbalancer.server.port=80"
      - "traefik.http.services.ldap-user-manager.loadbalancer.server.scheme=http"
      - "homepage.name=Ldap User Manager"
      - "homepage.group=Admin"
      - "homepage.icon=/images/account.png"
      - "homepage.description=Users and Groups"
      - "homepage.href=https://ldap-user-manager.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=ldap-user-manager"

  linkding:
    extends:
      file: compose/linkding/docker-compose.yml
      service: linkding
    volumes:
      - ${APPDATA_DIR}/linkding:/etc/linkding/data
    env_file:
      - .env
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.linkding.rule=Host(`linkding.${DOMAINNAME}`)"
      - "traefik.http.services.linkding.loadbalancer.server.port=9090"
      - "homepage.name=Linkding"
      - "homepage.group=Apps"
      - "homepage.icon=linkding"
      - "homepage.description=Bookmark Manager"
      - "homepage.href=https://linkding.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=linkding"

  manyfold:
    extends:
      file: compose/manyfold/docker-compose.yml
      service: manyfold
    volumes:
      - ${APPDATA_DIR}/manyfold/models:/models
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.manyfold.rule=Host(`manyfold.${DOMAINNAME}`)"
      - "traefik.http.services.manyfold.loadbalancer.server.port=3214"
      - "homepage.name=Manyfold"
      - "homepage.group=File Management"
      - "homepage.icon=manyfold"
      - "homepage.description=3D Model Manager"
      - "homepage.href=https://manyfold.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=manyfold"

  manyfold-postgres:
    extends:
      file: compose/manyfold/docker-compose.yml
      service: manyfold-postgres
    volumes:
      - ${APPDATA_DIR}/manyfold/db:/var/lib/postgresql/data
    labels:
      - "homepage.name=Manyfold Postgres DB"
      - "homepage.group=Databases"
      - "homepage.icon=postgres"
      - "homepage.description=3D Model Manager DB"
      - "sablier.enable=true"
      - "sablier.group=manyfold"

  manyfold-redis:
    extends:
      file: compose/manyfold/docker-compose.yml
      service: manyfold-redis
    labels:
      - "homepage.name=Manyfold Redis"
      - "homepage.group=Databases"
      - "homepage.icon=redis"
      - "homepage.description=3D Model Manager Redis"
      - "sablier.enable=true"
      - "sablier.group=manyfold"

  miniflux:
    extends:
      file: compose/miniflux/docker-compose.yml
      service: miniflux
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.miniflux.rule=Host(`miniflux.${DOMAINNAME}`)"
      - "traefik.http.services.miniflux.loadbalancer.server.port=8080"
      - "homepage.name=Miniflux"
      - "homepage.group=Apps"
      - "homepage.icon=miniflux"
      - "homepage.description=Feed Reader"
      - "homepage.href=https://miniflux.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=miniflux"

  miniflux-db:
    extends:
      file: compose/miniflux/docker-compose.yml
      service: miniflux-db
    volumes:
      - ${APPDATA_DIR}/miniflux/db:/var/lib/postgresql/data
    labels:
      - "homepage.name=Miniflux Postgres DB"
      - "homepage.group=Databases"
      - "homepage.icon=postgres"
      - "homepage.description=Feed Reader"
      - "sablier.enable=true"
      - "sablier.group=miniflux"

  mkcert:
    extends:
      file: compose/miniflux/docker-compose.yml
      service: miniflux-db
    volumes:
      - ${CERTS_DIR}:/root/.local/share/mkcert
    labels:
      - "homepage.name=MKCert"
      - "homepage.group=Background Services"
      - "homepage.icon=/images/lock.png"
      - "homepage.description=Localhost cert management"

  morphos:
    extends:
      file: compose/morphos/docker-compose.yml
      service: morphos
    volumes:
      - ${CONFIG_DIR}/morphos:/tmp:rw
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.morphos.rule=Host(`morphos.${DOMAINNAME}`)"
      - "traefik.http.services.morphos.loadbalancer.server.port=8080"
      - "homepage.name=Morphos"
      - "homepage.group=File Conversion"
      - "homepage.icon=morphos"
      - "homepage.description=File Conversion"
      - "homepage.href=https://morphos.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=morphos"

  navidrome:
    extends:
      file: compose/navidrome/docker-compose.yml
      service: navidrome
    volumes:
      - ${APPDATA_DIR}/navidrome:/data
      - ${MEDIA_DIR}/music:/music:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.navidrome.rule=Host(`navidrome.${DOMAINNAME}`)" 
      - "traefik.http.services.navidrome.loadbalancer.server.port=4533"
      - "homepage.name=Navidrome"
      - "homepage.group=Media"
      - "homepage.icon=navidrome"
      - "homepage.description=Music Player"
      - "homepage.href=https://navidrome.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=navidrome"
  
  olivetin:
    extends:
      file: compose/olivetin/docker-compose.yml
      service: olivetin
    volumes:
      - ${CONFIG_DIR}/olivetin:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.olivetin.rule=Host(`olivetin.${DOMAINNAME}`)"
      - "traefik.http.services.olivetin.loadbalancer.server.port=1337"
      - "homepage.name=OliveTin"
      - "homepage.group=Admin"
      - "homepage.icon=olivetin"
      - "homepage.description=Simple Command Buttons"
      - "homepage.href=https://olivetin.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=olivetin"

  omni-tools:
    extends:
      file: compose/omni-tools/docker-compose.yml
      service: omni-tools
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.omni-tools.rule=Host(`omni-tools.${DOMAINNAME}`)"
      - "traefik.http.services.omni-tools.loadbalancer.server.port=80"
      - "homepage.name=Omni Tools"
      - "homepage.group=Tools"
      - "homepage.icon=omni-tools"
      - "homepage.description=Tools Collection"
      - "homepage.href=https://omni-tools.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=omni-tools"

  openldap:
    extends:
      file: compose/openldap/docker-compose.yml
      service: openldap
    volumes: 
      - ${CONFIG_DIR}/openldap/ldap/db:/var/lib/ldap:rw
      - ${CONFIG_DIR}/openldap/ldap/conf:/etc/ldap/slapd.d:rw
    labels:
      - "homepage.name=OpenLDAP"
      - "homepage.group=Databases"
      - "homepage.icon=openldap"
      - "homepage.description=Users and Groups Service"

  pairdrop:
    extends:
      file: compose/pairdrop/docker-compose.yml
      service: pairdrop
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pairdrop.rule=Host(`pairdrop.${DOMAINNAME}`)"
      - "traefik.http.services.pairdrop.loadbalancer.server.port=3000"
      - "homepage.name=Pairdrop"
      - "homepage.group=File Management"
      - "homepage.icon=pairdrop"
      - "homepage.description=Filesharing Tool"
      - "homepage.href=https://pairdrop.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=pairdrop"

  redis-insight:
    extends:
      file: compose/redis-insight/docker-compose.yml
      service: redis-insight
    volumes:
      - ${APPDATA_DIR}/redis-insight:/data:rw
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redis-insight.rule=Host(`redis-insight.${DOMAINNAME}`)"
      - "traefik.http.services.redis-insight.loadbalancer.server.port=5540"
      - "homepage.name=Redis Insight"
      - "homepage.group=Admin"
      - "homepage.icon=redis"
      - "homepage.description=Redis DB Web UI"
      - "homepage.href=https://redis-insight.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=redis-insight"

  # redlib:
  #   image: quay.io/redlib/redlib:latest
  #   restart: always
  #   hostname: redlib
  #   container_name: redlib
  #   user: nobody
  #   read_only: true
  #   security_opt:
  #     - no-new-privileges:true
  #   cap_drop:
  #     - ALL
  #   env_file: .env
  #   networks:
  #     - traefik_network
  #   healthcheck:
  #     test: ["CMD", "wget", "--spider", "-q", "--tries=1", "http://localhost:8080/settings"]
  #     interval: 5m
  #     timeout: 3s
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.redlib.rule=Host(`redlib.${DOMAINNAME}`)"
  #     - "traefik.http.services.redlib.loadbalancer.server.port=8080"
  #     - "homepage.name=Redlib"
  #     - "homepage.group=Apps"
  #     - "homepage.icon=redlib"
  #     - "homepage.description=Redlib"
  #     - "homepage.href=https://redlib.${DOMAINNAME}/"
  #     - "sablier.enable=true"
  #     - "sablier.group=redlib"

  reubah:
    extends:
      file: compose/reubah/docker-compose.yml
      service: reubah
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.reubah.rule=Host(`reubah.${DOMAINNAME}`)"
      - "traefik.http.services.reubah.loadbalancer.server.port=8081"
      - "homepage.name=Reubah"
      - "homepage.group=File Conversion"
      - "homepage.icon=mdi-autorenew"
      - "homepage.description=Bulk File Converter"
      - "homepage.href=https://reubah.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=reubah"

  sablier:
    extends:
      file: compose/sablier/docker-compose.yml
      service: sablier
    volumes:
      - ${DOCKER_SOCKET}:/var/run/docker.sock
    labels:
      - "homepage.name=Sablier"
      - "homepage.group=Background Services"
      - "homepage.icon=mdi-autorenew"
      - "homepage.description=Auto-Start Containers"
      - "homepage.href=https://sablier.${DOMAINNAME}/"
      - "sablier.enable=false"
      - "sablier.group=sablier"

  sablier-gui:
    extends:
      file: compose/sablier-gui/docker-compose.yml
      service: sablier-gui
    build:
      context: sablier-gui
      target: builder
    volumes:
      - ${DOCKER_SOCKET}:/var/run/docker.sock
      - ${CONFIG_DIR}/sablier/sablier-dynamic.yml:/dynamic.yml:rw
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sablier-gui.rule=Host(`sablier-gui.${DOMAINNAME}`)"
      - "traefik.http.services.sablier-gui.loadbalancer.server.port=80"
      - "traefik.docker.network=traefik_network"
      - "homepage.name=Sablier GUI"
      - "homepage.group=Admin"
      - "homepage.icon=mdi-rocket-launch"
      - "homepage.description=Container Auto-Start"
      - "homepage.href=https://sablier-gui.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=sablier-gui"

  sablier-gui-db:
    extends:
      file: compose/sablier-gui/docker-compose.yml
      service: sablier-gui-db
    volumes:
      - ${APPDATA_DIR}/sablier-gui-db/:/var/lib/mysql
    labels:
      - "homepage.name=Sablier GUI MariaDB"
      - "homepage.group=Databases"
      - "homepage.icon=mariadb"
      - "homepage.description=Container Auto-Start"
      - "sablier.enable=true"
      - "sablier.group=sablier-gui"
    
  serve:
    extends:
      file: compose/serve/docker-compose.yml
      service: serve
    volumes:
      - ${APPDATA_DIR}/serve:/usr/share/nginx/html/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.serve.rule=Host(`serve.${DOMAINNAME}`)"
      - "traefik.http.services.serve.loadbalancer.server.port=80"
      - "traefik.http.services.serve.loadbalancer.server.scheme=http"
      - "homepage.name=File Server"
      - "homepage.group=File Management"
      - "homepage.icon=nginx"
      - "homepage.description=Simple File Service"
      - "homepage.href=https://serve.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=serve"

  tasks:
    extends:
      file: compose/tasks/docker-compose.yml
      service: tasks
    volumes:
      - $APPDATA_DIR/tasksmd/tasks:/tasks
      - $APPDATA_DIR/tasksmd/config:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tasks.rule=Host(`tasks.${DOMAINNAME}`)"
      - "traefik.http.services.tasks.loadbalancer.server.port=8080"
      - "homepage.name=Tasks"
      - "homepage.group=Apps"
      - "homepage.icon=mdi-format-list-checks"
      - "homepage.description=Todo Lists Manager"
      - "homepage.href=https://tasks.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=tasks"
    
  teammapper:
    extends:
      file: compose/teammapper/docker-compose.yml
      service: teammapper
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.teammapper.rule=Host(`teammapper.${DOMAINNAME}`)"
      - "traefik.http.services.teammapper.loadbalancer.server.port=3000"
      - "homepage.name=TeamMapper"
      - "homepage.group=Apps"
      - "homepage.icon=mdi-brain"
      - "homepage.description=Mindmap Diagram"
      - "homepage.href=https://teammapper.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=teammapper"

  teammapper-postgres:
    extends:
      file: compose/teammapper/docker-compose.yml
      service: teammapper-postgres
    volumes:
      - ${APPDATA_DIR}/teammapper/db:/var/lib/postgresql/data/pgdata
    labels:
      - "homepage.name=TeamMapper Postgres DB"
      - "homepage.group=Databases"
      - "homepage.icon=postgres"
      - "homepage.description=TeamMapper Backend DB"
      - "homepage.href=https://teammapper.${DOMAINNAME}/"
      - "sablier.enable=true"
      - "sablier.group=teammapper"

  traefik:
    extends:
      file: compose/teammapper/docker-compose.yml
      service: teammapper
    ports:
      - ${TRAEFIK_PORT_HTTP}:80
      - ${TRAEFIK_PORT_HTTPS}:443
    volumes:
      - ${DOCKER_SOCKET}:/var/run/docker.sock:ro
      - ${CERTS_DIR}:/certs:ro
      - ${CONFIG_DIR}/traefik/dynamic.yml:/dynamic/dynamic.yml
      - ${CONFIG_DIR}/sablier/sablier-dynamic.yml:/dynamic/sablier-dynamic.yml
      - ${LOGS_DIR}/traefik:/logs/
      - ./plugins-local:/plugins-local
    labels:
      - "traefik.enable=true"
      # TLS options
      - "traefik.tls.options.modern.minVersion=VersionTLS13"
      - "traefik.tls.options.intermediate.minVersion=VersionTLS12"
      - "traefik.tls.options.intermediate.cipherSuites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
      # Add auth middleware
      - "traefik.http.routers.api.middlewares=authelia@docker"
      # Define redirect-to-https middleware
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
      # Associate traefik with hostname
      - "traefik.http.routers.traefik.tls.domains[1].main=${DOMAINNAME}"
      - "traefik.http.routers.traefik.tls.domains[1].sans=*.${DOMAINNAME}"
      # Add traefik dashboard routing
      - "traefik.http.routers.api.rule=Host(`traefik.${DOMAINNAME}`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.options=default"
      # Middleware - Portainer Theme
      - "traefik.http.middlewares.portainertheme.plugin.themepark.app=portainer"
      - "traefik.http.middlewares.portainertheme.plugin.themepark.theme=nord"
      # Middleware - Filebrowser Theme
      - "traefik.http.middlewares.filebrowsertheme.plugin.themepark.app=filebrowser"
      - "traefik.http.middlewares.filebrowsertheme.plugin.themepark.theme=nord"
      # Middleware - Dozzle Theme
      - "traefik.http.middlewares.dozzletheme.plugin.themepark.app=dozzle"
      - "traefik.http.middlewares.dozzletheme.plugin.themepark.theme=nord"
      # Middleware - Dozzle CSP Headers
      - "traefik.http.middlewares.dozzle-csp.headers.customResponseHeaders.X-WebKit-CSP="
      - "traefik.http.middlewares.dozzle-csp.headers.customResponseHeaders.Content-Security-Policy="
      # Configure homepage automatic discovery
      - "homepage.name=Traefik Dashboard"
      - "homepage.group=Admin"
      - "homepage.icon=traefik"
      - "homepage.description=Traefik proxy dashboard"
      - "homepage.href=https://traefik.${DOMAINNAME}/"